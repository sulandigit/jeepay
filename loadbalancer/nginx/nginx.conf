# Nginx负载均衡主配置文件
user nginx;
worker_processes auto;
error_log /var/log/nginx/error.log warn;
pid /var/run/nginx.pid;

# 优化worker连接数
events {
    worker_connections 4096;
    use epoll;
    multi_accept on;
}

http {
    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    # 日志格式定义
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for" '
                    'rt=$request_time uct="$upstream_connect_time" '
                    'uht="$upstream_header_time" urt="$upstream_response_time"';

    access_log /var/log/nginx/access.log main;

    # 性能优化配置
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    types_hash_max_size 2048;
    client_max_body_size 100M;

    # Gzip压缩
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_types
        text/plain
        text/css
        text/xml
        text/javascript
        application/json
        application/javascript
        application/xml+rss
        application/atom+xml
        image/svg+xml;

    # 限流配置
    limit_req_zone $binary_remote_addr zone=api:10m rate=10r/s;
    limit_req_zone $binary_remote_addr zone=login:10m rate=1r/s;

    # 包含上游服务器配置
    include /etc/nginx/conf.d/upstream.conf;

    # 支付网关负载均衡
    server {
        listen 80;
        server_name payment.jeepay.local;

        # 限流设置
        limit_req zone=api burst=20 nodelay;

        # 健康检查
        location /nginx-health {
            access_log off;
            return 200 "healthy\n";
            add_header Content-Type text/plain;
        }

        # API请求代理
        location /api/ {
            proxy_pass http://payment_servers;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # 超时设置
            proxy_connect_timeout 30s;
            proxy_send_timeout 60s;
            proxy_read_timeout 60s;
            
            # 缓冲设置
            proxy_buffering on;
            proxy_buffer_size 4k;
            proxy_buffers 8 4k;
        }

        # 静态资源
        location /static/ {
            expires 1d;
            add_header Cache-Control "public, immutable";
        }

        # 健康检查端点
        location /health {
            proxy_pass http://payment_servers/actuator/health;
            access_log off;
        }
    }

    # 运营平台负载均衡
    server {
        listen 80;
        server_name manager.jeepay.local;

        # 限流设置
        limit_req zone=api burst=15 nodelay;

        # 登录限流
        location /api/auth/login {
            limit_req zone=login burst=3 nodelay;
            proxy_pass http://manager_servers;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # API请求代理
        location /api/ {
            proxy_pass http://manager_servers;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # 会话保持
            proxy_cookie_path / "/; HttpOnly; Secure";
            
            # 超时设置
            proxy_connect_timeout 30s;
            proxy_send_timeout 60s;
            proxy_read_timeout 60s;
        }

        # 健康检查端点
        location /health {
            proxy_pass http://manager_servers/actuator/health;
            access_log off;
        }
    }

    # 商户平台负载均衡
    server {
        listen 80;
        server_name merchant.jeepay.local;

        # 限流设置
        limit_req zone=api burst=15 nodelay;

        # 登录限流
        location /api/auth/login {
            limit_req zone=login burst=3 nodelay;
            proxy_pass http://merchant_servers;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # API请求代理
        location /api/ {
            proxy_pass http://merchant_servers;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # IP哈希实现会话保持
            # 在upstream配置中使用ip_hash
            
            # 超时设置
            proxy_connect_timeout 30s;
            proxy_send_timeout 60s;
            proxy_read_timeout 60s;
        }

        # 健康检查端点
        location /health {
            proxy_pass http://merchant_servers/actuator/health;
            access_log off;
        }
    }

    # 默认服务器配置
    server {
        listen 80 default_server;
        server_name _;
        return 444;
    }
}